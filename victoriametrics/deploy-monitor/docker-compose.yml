services:
  # 指标采集 它从 --promscrape.config 中定义的目标中抓取数据并将它们转发到 --remoteWrite.url
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:latest
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - ./scrape/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "-promscrape.config=/etc/prometheus/prometheus.yml"
      - "-remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    networks:
      - vm_single
    restart: always
  
  # VictoriaMetrics实例 一个负责存储指标和处理读请求的单一进程
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:stable
    ports:
      - 8428:8428
      - 8089:8089
      - 8089:8089/udp
      - 2003:2003
      - 2003:2003/udp
      - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "-storageDataPath=/storage"
      - "-graphiteListenAddr=:2003"
      - "-opentsdbListenAddr=:4242"
      - "-httpListenAddr=:8428"
      - "-influxListenAddr=:8089"
      - "-vmalert.proxyURL=http://vmalert:8880"
    networks:
      - vm_single
    restart: always

  # 使用VictoriaMetrics作为数据源配置的Grafana实例
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on:
      - "victoriametrics"
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./provisioning/datasources/prometheus-datasource:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards/victoriametrics.json:/var/lib/grafana/dashboards/vm.json
      - ./dashboards/vmagent.json:/var/lib/grafana/dashboards/vmagent.json
      - ./dashboards/vmalert.json:/var/lib/grafana/dashboards/vmalert.json
    networks:
      - vm_single
    restart: always

  # vmalert执行告警规则评估和记录规则
  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert:stable
    depends_on:
      - "victoriametrics"
      - "alertmanager"
    ports:
      - 8880:8880
    volumes:
      - ./alert/alerts.yml:/etc/alerts/alerts.yml
      - ./alert/alerts-health.yml:/etc/alerts/alerts-health.yml
      - ./alert/alerts-vmagent.yml:/etc/alerts/alerts-vmagent.yml
      - ./alert/alerts-vmalert.yml:/etc/alerts/alerts-vmalert.yml
    command:
      - "-datasource.url=http://victoriametrics:8428/"
      - "-remoteRead.url=http://victoriametrics:8428/"
      - "-remoteWrite.url=http://victoriametrics:8428/"
      - "-notifier.url=http://alertmanager:9093/"
      - "-rule=/etc/alerts/*.yml"
      # 在Grafana中显示警报的来源
      - "-external.url=http://127.0.0.1:3000" # 容器外的Grafana
      # 在复制粘贴这行时，请注意在 $expr 中使用 $$ 进行转义
      - '-external.alert.source=explore?orgId=1&left={"datasource":"VictoriaMetrics","queries":[{"expr":{{$$expr|jsonEscape|queryEscape}},"refId":"A"}],"range":{"from":"now-1h","to":"now"}}'
    networks:
      - vm_single
    restart: always

  # Alertmanager 接收来自 vmalert 的警报通知 并根据 --config.file 分发它们
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    volumes:
      - alertmanagerdata:/var/lib/alertmanager
      - ./alertmanager/alertmanager.yml:/config/alertmanager.yml
    command:
      - "--config.file=/config/alertmanager.yml"
      - "--storage.path=/var/lib/alertmanager"
    ports:
      - 9093:9093
    networks:
      - vm_single
    restart: always
  
  # PrometheusAlert 部署 对消息做格式化
  prometheusalert:
    container_name: prometheusalert
    image: feiyu563/prometheus-alert:master
    volumes:
      - ./prometheusalert/app.conf:/app/conf/app.conf
      - promalertdata:/app/db
    # environment:
    #   - "PA_LOGIN_USER=admin"
    #   - "PA_LOGIN_PASSWORD=admin"
    #   - "PA_TITLE=PrometheusAlert"
    #   - "PA_OPEN_FEISHU=1"
    #   - "PA_OPEN_DINGDING=1"
    #   - "PA_OPEN_WEIXIN=1"
    ports:
      - 8080:8080
    depends_on:
      - alertmanager
    networks:
      - vm_single
    restart: always

volumes:
  vmagentdata: {}
  vmdata: {}
  grafanadata: {}
  alertmanagerdata: {}
  promalertdata: {}
networks:
  vm_single:
    driver: bridge
    #attachable: true